Terminals unused in grammar

    CHAR
    DIVASS
    '^'


State 58 conflicts: 1 shift/reduce
State 108 conflicts: 1 shift/reduce


Grammar

    0 $accept: start $end

    1 start: listTopDeclarations

    2 packages: PACKAGE IDENTIFIER

    3 type: '(' type ')'
    4     | INT
    5     | FLOAT32
    6     | BOOL
    7     | RUNE
    8     | FUNC functionSignature
    9     | literalType

   10 literalType: IDENTIFIER

   11 functionSignature: functionParameters functionResults

   12 functionResults: %empty
   13                | functionParameters
   14                | type

   15 functionParameters: '(' ')'
   16                   | '(' functionParametersList ')'

   17 functionParametersList: type
   18                       | identifierList type
   19                       | type ',' functionParametersList
   20                       | identifierList type ',' functionParametersList

   21 block: '{' statmentList '}'

   22 topDeclaration: functionDeclaration
   23               | packages
   24               | listDeclaration

   25 listTopDeclarations: topDeclaration ';'
   26                    | topDeclaration ';' listTopDeclarations

   27 functionDeclaration: FUNC IDENTIFIER functionSignature block

   28 listDeclaration: variableDeclaration

   29 variableDeclaration: VAR varSpec
   30                    | VAR '(' varSpecList ')'

   31 varSpec: identifierList type
   32        | identifierList type '=' expressionList
   33        | identifierList '=' expressionList

   34 varSpecList: varSpec ';'
   35            | varSpec ';' varSpecList

   36 statments: simpleStatment
   37          | ifStatment
   38          | returnStatment
   39          | forStatment
   40          | listDeclaration

   41 simpleStatment: %empty
   42               | expression
   43               | incdecStatment
   44               | oprAssStatment
   45               | expressionList '=' expressionList

   46 incdecStatment: expression DECR
   47               | expression INCR

   48 oprAssStatment: expression DECASS expression
   49               | expression INCASS expression
   50               | expression MULASS expression
   51               | expression '/' '=' expression

   52 statmentList: %empty
   53             | statments ';' statmentList

   54 ifStatment: IF expression block
   55           | IF expression block ELSE ifStatment
   56           | IF expression block ELSE block

   57 returnStatment: RETURN expressionList

   58 forStatment: FOR simpleStatment ';' expression ';' simpleStatment block
   59            | FOR expression block
   60            | FOR block

   61 expression: unaryExpr
   62           | expression '*' expression
   63           | expression '/' expression
   64           | expression '%' expression
   65           | expression '+' expression
   66           | expression '-' expression
   67           | expression EQ expression
   68           | expression NEQ expression
   69           | expression AND expression
   70           | expression OR expression
   71           | expression GT expression
   72           | expression GE expression
   73           | expression LT expression
   74           | expression LE expression

   75 unaryExpr: primaryExpr
   76          | NOT unaryExpr
   77          | '-' unaryExpr
   78          | '+' unaryExpr

   79 primaryExpr: operand
   80            | primaryExpr '(' ')'
   81            | primaryExpr '(' expressionList ')'

   82 operand: literal
   83        | IDENTIFIER
   84        | '(' expression ')'

   85 literal: basicLiteral

   86 basicLiteral: BOOLEAN_LITERAL
   87             | INTEGER_LITERAL
   88             | FLOAT_LITERAL
   89             | CHAR_LITERAL

   90 expressionList: expression
   91               | expression ',' expressionList

   92 identifierList: IDENTIFIER
   93               | IDENTIFIER ',' identifierList


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 64
    '(' (40) 3 15 16 30 80 81 84
    ')' (41) 3 15 16 30 80 81 84
    '*' (42) 62
    '+' (43) 65 78
    ',' (44) 19 20 91 93
    '-' (45) 66 77
    '/' (47) 51 63
    ';' (59) 25 26 34 35 53 58
    '=' (61) 32 33 45 51
    '^' (94)
    '{' (123) 21
    '}' (125) 21
    error (256)
    INT (258) 4
    FLOAT32 (259) 5
    BOOL (260) 6
    CHAR (261)
    RUNE (262) 7
    PACKAGE (263) 2
    IF (264) 54 55 56
    ELSE (265) 55 56
    FOR (266) 58 59 60
    RETURN (267) 57
    VAR (268) 29 30
    FUNC (269) 8 27
    AND (270) 69
    OR (271) 70
    NOT (272) 76
    EQ (273) 67
    NEQ (274) 68
    GT (275) 71
    GE (276) 72
    LT (277) 73
    LE (278) 74
    DECR (279) 46
    INCR (280) 47
    DECASS (281) 48
    INCASS (282) 49
    MULASS (283) 50
    DIVASS (284)
    IDENTIFIER <identifierValue> (285) 2 10 27 83 92 93
    INTEGER_LITERAL <integerValue> (286) 87
    FLOAT_LITERAL <floatValue> (287) 88
    BOOLEAN_LITERAL <booleanValue> (288) 86
    CHAR_LITERAL <charValue> (289) 89


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    start (49)
        on left: 1
        on right: 0
    packages <topDeclaration> (50)
        on left: 2
        on right: 23
    type <type> (51)
        on left: 3 4 5 6 7 8 9
        on right: 3 14 17 18 19 20 31 32
    literalType <type> (52)
        on left: 10
        on right: 9
    functionSignature <type> (53)
        on left: 11
        on right: 8 27
    functionResults <fields> (54)
        on left: 12 13 14
        on right: 11
    functionParameters <fields> (55)
        on left: 15 16
        on right: 11 13
    functionParametersList <fields> (56)
        on left: 17 18 19 20
        on right: 16 19 20
    block <block> (57)
        on left: 21
        on right: 27 54 55 56 58 59 60
    topDeclaration <listTopDeclaration> (58)
        on left: 22 23 24
        on right: 25 26
    listTopDeclarations <listTopDeclaration> (59)
        on left: 25 26
        on right: 1 26
    functionDeclaration <topDeclaration> (60)
        on left: 27
        on right: 22
    listDeclaration <listDeclaration> (61)
        on left: 28
        on right: 24 40
    variableDeclaration <listDeclaration> (62)
        on left: 29 30
        on right: 28
    varSpec <declaration> (63)
        on left: 31 32 33
        on right: 29 34 35
    varSpecList <listDeclaration> (64)
        on left: 34 35
        on right: 30 35
    statments <listStatment> (65)
        on left: 36 37 38 39 40
        on right: 53
    simpleStatment <simpleStatment> (66)
        on left: 41 42 43 44 45
        on right: 36 58
    incdecStatment <simpleStatment> (67)
        on left: 46 47
        on right: 43
    oprAssStatment <simpleStatment> (68)
        on left: 48 49 50 51
        on right: 44
    statmentList <listStatment> (69)
        on left: 52 53
        on right: 21 53
    ifStatment <statment> (70)
        on left: 54 55 56
        on right: 37 55
    returnStatment <statment> (71)
        on left: 57
        on right: 38
    forStatment <statment> (72)
        on left: 58 59 60
        on right: 39
    expression <expression> (73)
        on left: 61 62 63 64 65 66 67 68 69 70 71 72 73 74
        on right: 42 46 47 48 49 50 51 54 55 56 58 59 62 63 64 65 66 67 68 69 70 71 72 73 74 84 90 91
    unaryExpr <expression> (74)
        on left: 75 76 77 78
        on right: 61 76 77 78
    primaryExpr <expression> (75)
        on left: 79 80 81
        on right: 75 80 81
    operand <expression> (76)
        on left: 82 83 84
        on right: 79
    literal <expression> (77)
        on left: 85
        on right: 82
    basicLiteral <expression> (78)
        on left: 86 87 88 89
        on right: 85
    expressionList <listExpression> (79)
        on left: 90 91
        on right: 32 33 45 57 81 91
    identifierList <idenList> (80)
        on left: 92 93
        on right: 18 20 31 32 33 93


State 0

    0 $accept: . start $end

    PACKAGE  shift, and go to state 1
    VAR      shift, and go to state 2
    FUNC     shift, and go to state 3

    start                go to state 4
    packages             go to state 5
    topDeclaration       go to state 6
    listTopDeclarations  go to state 7
    functionDeclaration  go to state 8
    listDeclaration      go to state 9
    variableDeclaration  go to state 10


State 1

    2 packages: PACKAGE . IDENTIFIER

    IDENTIFIER  shift, and go to state 11


State 2

   29 variableDeclaration: VAR . varSpec
   30                    | VAR . '(' varSpecList ')'

    IDENTIFIER  shift, and go to state 12
    '('         shift, and go to state 13

    varSpec         go to state 14
    identifierList  go to state 15


State 3

   27 functionDeclaration: FUNC . IDENTIFIER functionSignature block

    IDENTIFIER  shift, and go to state 16


State 4

    0 $accept: start . $end

    $end  shift, and go to state 17


State 5

   23 topDeclaration: packages .

    $default  reduce using rule 23 (topDeclaration)


State 6

   25 listTopDeclarations: topDeclaration . ';'
   26                    | topDeclaration . ';' listTopDeclarations

    ';'  shift, and go to state 18


State 7

    1 start: listTopDeclarations .

    $default  reduce using rule 1 (start)


State 8

   22 topDeclaration: functionDeclaration .

    $default  reduce using rule 22 (topDeclaration)


State 9

   24 topDeclaration: listDeclaration .

    $default  reduce using rule 24 (topDeclaration)


State 10

   28 listDeclaration: variableDeclaration .

    $default  reduce using rule 28 (listDeclaration)


State 11

    2 packages: PACKAGE IDENTIFIER .

    $default  reduce using rule 2 (packages)


State 12

   92 identifierList: IDENTIFIER .
   93               | IDENTIFIER . ',' identifierList

    ','  shift, and go to state 19

    $default  reduce using rule 92 (identifierList)


State 13

   30 variableDeclaration: VAR '(' . varSpecList ')'

    IDENTIFIER  shift, and go to state 12

    varSpec         go to state 20
    varSpecList     go to state 21
    identifierList  go to state 15


State 14

   29 variableDeclaration: VAR varSpec .

    $default  reduce using rule 29 (variableDeclaration)


State 15

   31 varSpec: identifierList . type
   32        | identifierList . type '=' expressionList
   33        | identifierList . '=' expressionList

    INT         shift, and go to state 22
    FLOAT32     shift, and go to state 23
    BOOL        shift, and go to state 24
    RUNE        shift, and go to state 25
    FUNC        shift, and go to state 26
    IDENTIFIER  shift, and go to state 27
    '('         shift, and go to state 28
    '='         shift, and go to state 29

    type         go to state 30
    literalType  go to state 31


State 16

   27 functionDeclaration: FUNC IDENTIFIER . functionSignature block

    '('  shift, and go to state 32

    functionSignature   go to state 33
    functionParameters  go to state 34


State 17

    0 $accept: start $end .

    $default  accept


State 18

   25 listTopDeclarations: topDeclaration ';' .
   26                    | topDeclaration ';' . listTopDeclarations

    PACKAGE  shift, and go to state 1
    VAR      shift, and go to state 2
    FUNC     shift, and go to state 3

    $default  reduce using rule 25 (listTopDeclarations)

    packages             go to state 5
    topDeclaration       go to state 6
    listTopDeclarations  go to state 35
    functionDeclaration  go to state 8
    listDeclaration      go to state 9
    variableDeclaration  go to state 10


State 19

   93 identifierList: IDENTIFIER ',' . identifierList

    IDENTIFIER  shift, and go to state 12

    identifierList  go to state 36


State 20

   34 varSpecList: varSpec . ';'
   35            | varSpec . ';' varSpecList

    ';'  shift, and go to state 37


State 21

   30 variableDeclaration: VAR '(' varSpecList . ')'

    ')'  shift, and go to state 38


State 22

    4 type: INT .

    $default  reduce using rule 4 (type)


State 23

    5 type: FLOAT32 .

    $default  reduce using rule 5 (type)


State 24

    6 type: BOOL .

    $default  reduce using rule 6 (type)


State 25

    7 type: RUNE .

    $default  reduce using rule 7 (type)


State 26

    8 type: FUNC . functionSignature

    '('  shift, and go to state 32

    functionSignature   go to state 39
    functionParameters  go to state 34


State 27

   10 literalType: IDENTIFIER .

    $default  reduce using rule 10 (literalType)


State 28

    3 type: '(' . type ')'

    INT         shift, and go to state 22
    FLOAT32     shift, and go to state 23
    BOOL        shift, and go to state 24
    RUNE        shift, and go to state 25
    FUNC        shift, and go to state 26
    IDENTIFIER  shift, and go to state 27
    '('         shift, and go to state 28

    type         go to state 40
    literalType  go to state 31


State 29

   33 varSpec: identifierList '=' . expressionList

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    expression      go to state 50
    unaryExpr       go to state 51
    primaryExpr     go to state 52
    operand         go to state 53
    literal         go to state 54
    basicLiteral    go to state 55
    expressionList  go to state 56


State 30

   31 varSpec: identifierList type .
   32        | identifierList type . '=' expressionList

    '='  shift, and go to state 57

    $default  reduce using rule 31 (varSpec)


State 31

    9 type: literalType .

    $default  reduce using rule 9 (type)


State 32

   15 functionParameters: '(' . ')'
   16                   | '(' . functionParametersList ')'

    INT         shift, and go to state 22
    FLOAT32     shift, and go to state 23
    BOOL        shift, and go to state 24
    RUNE        shift, and go to state 25
    FUNC        shift, and go to state 26
    IDENTIFIER  shift, and go to state 58
    '('         shift, and go to state 28
    ')'         shift, and go to state 59

    type                    go to state 60
    literalType             go to state 31
    functionParametersList  go to state 61
    identifierList          go to state 62


State 33

   27 functionDeclaration: FUNC IDENTIFIER functionSignature . block

    '{'  shift, and go to state 63

    block  go to state 64


State 34

   11 functionSignature: functionParameters . functionResults

    INT         shift, and go to state 22
    FLOAT32     shift, and go to state 23
    BOOL        shift, and go to state 24
    RUNE        shift, and go to state 25
    FUNC        shift, and go to state 26
    IDENTIFIER  shift, and go to state 27
    '('         shift, and go to state 65

    $default  reduce using rule 12 (functionResults)

    type                go to state 66
    literalType         go to state 31
    functionResults     go to state 67
    functionParameters  go to state 68


State 35

   26 listTopDeclarations: topDeclaration ';' listTopDeclarations .

    $default  reduce using rule 26 (listTopDeclarations)


State 36

   93 identifierList: IDENTIFIER ',' identifierList .

    $default  reduce using rule 93 (identifierList)


State 37

   34 varSpecList: varSpec ';' .
   35            | varSpec ';' . varSpecList

    IDENTIFIER  shift, and go to state 12

    $default  reduce using rule 34 (varSpecList)

    varSpec         go to state 20
    varSpecList     go to state 69
    identifierList  go to state 15


State 38

   30 variableDeclaration: VAR '(' varSpecList ')' .

    $default  reduce using rule 30 (variableDeclaration)


State 39

    8 type: FUNC functionSignature .

    $default  reduce using rule 8 (type)


State 40

    3 type: '(' type . ')'

    ')'  shift, and go to state 70


State 41

   76 unaryExpr: NOT . unaryExpr

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    unaryExpr     go to state 71
    primaryExpr   go to state 52
    operand       go to state 53
    literal       go to state 54
    basicLiteral  go to state 55


State 42

   83 operand: IDENTIFIER .

    $default  reduce using rule 83 (operand)


State 43

   87 basicLiteral: INTEGER_LITERAL .

    $default  reduce using rule 87 (basicLiteral)


State 44

   88 basicLiteral: FLOAT_LITERAL .

    $default  reduce using rule 88 (basicLiteral)


State 45

   86 basicLiteral: BOOLEAN_LITERAL .

    $default  reduce using rule 86 (basicLiteral)


State 46

   89 basicLiteral: CHAR_LITERAL .

    $default  reduce using rule 89 (basicLiteral)


State 47

   78 unaryExpr: '+' . unaryExpr

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    unaryExpr     go to state 72
    primaryExpr   go to state 52
    operand       go to state 53
    literal       go to state 54
    basicLiteral  go to state 55


State 48

   77 unaryExpr: '-' . unaryExpr

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    unaryExpr     go to state 73
    primaryExpr   go to state 52
    operand       go to state 53
    literal       go to state 54
    basicLiteral  go to state 55


State 49

   84 operand: '(' . expression ')'

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    expression    go to state 74
    unaryExpr     go to state 51
    primaryExpr   go to state 52
    operand       go to state 53
    literal       go to state 54
    basicLiteral  go to state 55


State 50

   62 expression: expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   67           | expression . EQ expression
   68           | expression . NEQ expression
   69           | expression . AND expression
   70           | expression . OR expression
   71           | expression . GT expression
   72           | expression . GE expression
   73           | expression . LT expression
   74           | expression . LE expression
   90 expressionList: expression .
   91               | expression . ',' expressionList

    AND  shift, and go to state 75
    OR   shift, and go to state 76
    EQ   shift, and go to state 77
    NEQ  shift, and go to state 78
    GT   shift, and go to state 79
    GE   shift, and go to state 80
    LT   shift, and go to state 81
    LE   shift, and go to state 82
    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87
    ','  shift, and go to state 88

    $default  reduce using rule 90 (expressionList)


State 51

   61 expression: unaryExpr .

    $default  reduce using rule 61 (expression)


State 52

   75 unaryExpr: primaryExpr .
   80 primaryExpr: primaryExpr . '(' ')'
   81            | primaryExpr . '(' expressionList ')'

    '('  shift, and go to state 89

    $default  reduce using rule 75 (unaryExpr)


State 53

   79 primaryExpr: operand .

    $default  reduce using rule 79 (primaryExpr)


State 54

   82 operand: literal .

    $default  reduce using rule 82 (operand)


State 55

   85 literal: basicLiteral .

    $default  reduce using rule 85 (literal)


State 56

   33 varSpec: identifierList '=' expressionList .

    $default  reduce using rule 33 (varSpec)


State 57

   32 varSpec: identifierList type '=' . expressionList

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    expression      go to state 50
    unaryExpr       go to state 51
    primaryExpr     go to state 52
    operand         go to state 53
    literal         go to state 54
    basicLiteral    go to state 55
    expressionList  go to state 90


State 58

   10 literalType: IDENTIFIER .
   92 identifierList: IDENTIFIER .
   93               | IDENTIFIER . ',' identifierList

    ','  shift, and go to state 19

    ')'       reduce using rule 10 (literalType)
    ','       [reduce using rule 10 (literalType)]
    $default  reduce using rule 92 (identifierList)


State 59

   15 functionParameters: '(' ')' .

    $default  reduce using rule 15 (functionParameters)


State 60

   17 functionParametersList: type .
   19                       | type . ',' functionParametersList

    ','  shift, and go to state 91

    $default  reduce using rule 17 (functionParametersList)


State 61

   16 functionParameters: '(' functionParametersList . ')'

    ')'  shift, and go to state 92


State 62

   18 functionParametersList: identifierList . type
   20                       | identifierList . type ',' functionParametersList

    INT         shift, and go to state 22
    FLOAT32     shift, and go to state 23
    BOOL        shift, and go to state 24
    RUNE        shift, and go to state 25
    FUNC        shift, and go to state 26
    IDENTIFIER  shift, and go to state 27
    '('         shift, and go to state 28

    type         go to state 93
    literalType  go to state 31


State 63

   21 block: '{' . statmentList '}'

    IF               shift, and go to state 94
    FOR              shift, and go to state 95
    RETURN           shift, and go to state 96
    VAR              shift, and go to state 2
    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    '}'       reduce using rule 52 (statmentList)
    $default  reduce using rule 41 (simpleStatment)

    listDeclaration      go to state 97
    variableDeclaration  go to state 10
    statments            go to state 98
    simpleStatment       go to state 99
    incdecStatment       go to state 100
    oprAssStatment       go to state 101
    statmentList         go to state 102
    ifStatment           go to state 103
    returnStatment       go to state 104
    forStatment          go to state 105
    expression           go to state 106
    unaryExpr            go to state 51
    primaryExpr          go to state 52
    operand              go to state 53
    literal              go to state 54
    basicLiteral         go to state 55
    expressionList       go to state 107


State 64

   27 functionDeclaration: FUNC IDENTIFIER functionSignature block .

    $default  reduce using rule 27 (functionDeclaration)


State 65

    3 type: '(' . type ')'
   15 functionParameters: '(' . ')'
   16                   | '(' . functionParametersList ')'

    INT         shift, and go to state 22
    FLOAT32     shift, and go to state 23
    BOOL        shift, and go to state 24
    RUNE        shift, and go to state 25
    FUNC        shift, and go to state 26
    IDENTIFIER  shift, and go to state 58
    '('         shift, and go to state 28
    ')'         shift, and go to state 59

    type                    go to state 108
    literalType             go to state 31
    functionParametersList  go to state 61
    identifierList          go to state 62


State 66

   14 functionResults: type .

    $default  reduce using rule 14 (functionResults)


State 67

   11 functionSignature: functionParameters functionResults .

    $default  reduce using rule 11 (functionSignature)


State 68

   13 functionResults: functionParameters .

    $default  reduce using rule 13 (functionResults)


State 69

   35 varSpecList: varSpec ';' varSpecList .

    $default  reduce using rule 35 (varSpecList)


State 70

    3 type: '(' type ')' .

    $default  reduce using rule 3 (type)


State 71

   76 unaryExpr: NOT unaryExpr .

    $default  reduce using rule 76 (unaryExpr)


State 72

   78 unaryExpr: '+' unaryExpr .

    $default  reduce using rule 78 (unaryExpr)


State 73

   77 unaryExpr: '-' unaryExpr .

    $default  reduce using rule 77 (unaryExpr)


State 74

   62 expression: expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   67           | expression . EQ expression
   68           | expression . NEQ expression
   69           | expression . AND expression
   70           | expression . OR expression
   71           | expression . GT expression
   72           | expression . GE expression
   73           | expression . LT expression
   74           | expression . LE expression
   84 operand: '(' expression . ')'

    AND  shift, and go to state 75
    OR   shift, and go to state 76
    EQ   shift, and go to state 77
    NEQ  shift, and go to state 78
    GT   shift, and go to state 79
    GE   shift, and go to state 80
    LT   shift, and go to state 81
    LE   shift, and go to state 82
    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87
    ')'  shift, and go to state 109


State 75

   69 expression: expression AND . expression

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    expression    go to state 110
    unaryExpr     go to state 51
    primaryExpr   go to state 52
    operand       go to state 53
    literal       go to state 54
    basicLiteral  go to state 55


State 76

   70 expression: expression OR . expression

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    expression    go to state 111
    unaryExpr     go to state 51
    primaryExpr   go to state 52
    operand       go to state 53
    literal       go to state 54
    basicLiteral  go to state 55


State 77

   67 expression: expression EQ . expression

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    expression    go to state 112
    unaryExpr     go to state 51
    primaryExpr   go to state 52
    operand       go to state 53
    literal       go to state 54
    basicLiteral  go to state 55


State 78

   68 expression: expression NEQ . expression

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    expression    go to state 113
    unaryExpr     go to state 51
    primaryExpr   go to state 52
    operand       go to state 53
    literal       go to state 54
    basicLiteral  go to state 55


State 79

   71 expression: expression GT . expression

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    expression    go to state 114
    unaryExpr     go to state 51
    primaryExpr   go to state 52
    operand       go to state 53
    literal       go to state 54
    basicLiteral  go to state 55


State 80

   72 expression: expression GE . expression

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    expression    go to state 115
    unaryExpr     go to state 51
    primaryExpr   go to state 52
    operand       go to state 53
    literal       go to state 54
    basicLiteral  go to state 55


State 81

   73 expression: expression LT . expression

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    expression    go to state 116
    unaryExpr     go to state 51
    primaryExpr   go to state 52
    operand       go to state 53
    literal       go to state 54
    basicLiteral  go to state 55


State 82

   74 expression: expression LE . expression

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    expression    go to state 117
    unaryExpr     go to state 51
    primaryExpr   go to state 52
    operand       go to state 53
    literal       go to state 54
    basicLiteral  go to state 55


State 83

   65 expression: expression '+' . expression

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    expression    go to state 118
    unaryExpr     go to state 51
    primaryExpr   go to state 52
    operand       go to state 53
    literal       go to state 54
    basicLiteral  go to state 55


State 84

   66 expression: expression '-' . expression

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    expression    go to state 119
    unaryExpr     go to state 51
    primaryExpr   go to state 52
    operand       go to state 53
    literal       go to state 54
    basicLiteral  go to state 55


State 85

   62 expression: expression '*' . expression

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    expression    go to state 120
    unaryExpr     go to state 51
    primaryExpr   go to state 52
    operand       go to state 53
    literal       go to state 54
    basicLiteral  go to state 55


State 86

   63 expression: expression '/' . expression

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    expression    go to state 121
    unaryExpr     go to state 51
    primaryExpr   go to state 52
    operand       go to state 53
    literal       go to state 54
    basicLiteral  go to state 55


State 87

   64 expression: expression '%' . expression

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    expression    go to state 122
    unaryExpr     go to state 51
    primaryExpr   go to state 52
    operand       go to state 53
    literal       go to state 54
    basicLiteral  go to state 55


State 88

   91 expressionList: expression ',' . expressionList

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    expression      go to state 50
    unaryExpr       go to state 51
    primaryExpr     go to state 52
    operand         go to state 53
    literal         go to state 54
    basicLiteral    go to state 55
    expressionList  go to state 123


State 89

   80 primaryExpr: primaryExpr '(' . ')'
   81            | primaryExpr '(' . expressionList ')'

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49
    ')'              shift, and go to state 124

    expression      go to state 50
    unaryExpr       go to state 51
    primaryExpr     go to state 52
    operand         go to state 53
    literal         go to state 54
    basicLiteral    go to state 55
    expressionList  go to state 125


State 90

   32 varSpec: identifierList type '=' expressionList .

    $default  reduce using rule 32 (varSpec)


State 91

   19 functionParametersList: type ',' . functionParametersList

    INT         shift, and go to state 22
    FLOAT32     shift, and go to state 23
    BOOL        shift, and go to state 24
    RUNE        shift, and go to state 25
    FUNC        shift, and go to state 26
    IDENTIFIER  shift, and go to state 58
    '('         shift, and go to state 28

    type                    go to state 60
    literalType             go to state 31
    functionParametersList  go to state 126
    identifierList          go to state 62


State 92

   16 functionParameters: '(' functionParametersList ')' .

    $default  reduce using rule 16 (functionParameters)


State 93

   18 functionParametersList: identifierList type .
   20                       | identifierList type . ',' functionParametersList

    ','  shift, and go to state 127

    $default  reduce using rule 18 (functionParametersList)


State 94

   54 ifStatment: IF . expression block
   55           | IF . expression block ELSE ifStatment
   56           | IF . expression block ELSE block

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    expression    go to state 128
    unaryExpr     go to state 51
    primaryExpr   go to state 52
    operand       go to state 53
    literal       go to state 54
    basicLiteral  go to state 55


State 95

   58 forStatment: FOR . simpleStatment ';' expression ';' simpleStatment block
   59            | FOR . expression block
   60            | FOR . block

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49
    '{'              shift, and go to state 63

    $default  reduce using rule 41 (simpleStatment)

    block           go to state 129
    simpleStatment  go to state 130
    incdecStatment  go to state 100
    oprAssStatment  go to state 101
    expression      go to state 131
    unaryExpr       go to state 51
    primaryExpr     go to state 52
    operand         go to state 53
    literal         go to state 54
    basicLiteral    go to state 55
    expressionList  go to state 107


State 96

   57 returnStatment: RETURN . expressionList

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    expression      go to state 50
    unaryExpr       go to state 51
    primaryExpr     go to state 52
    operand         go to state 53
    literal         go to state 54
    basicLiteral    go to state 55
    expressionList  go to state 132


State 97

   40 statments: listDeclaration .

    $default  reduce using rule 40 (statments)


State 98

   53 statmentList: statments . ';' statmentList

    ';'  shift, and go to state 133


State 99

   36 statments: simpleStatment .

    $default  reduce using rule 36 (statments)


State 100

   43 simpleStatment: incdecStatment .

    $default  reduce using rule 43 (simpleStatment)


State 101

   44 simpleStatment: oprAssStatment .

    $default  reduce using rule 44 (simpleStatment)


State 102

   21 block: '{' statmentList . '}'

    '}'  shift, and go to state 134


State 103

   37 statments: ifStatment .

    $default  reduce using rule 37 (statments)


State 104

   38 statments: returnStatment .

    $default  reduce using rule 38 (statments)


State 105

   39 statments: forStatment .

    $default  reduce using rule 39 (statments)


State 106

   42 simpleStatment: expression .
   46 incdecStatment: expression . DECR
   47               | expression . INCR
   48 oprAssStatment: expression . DECASS expression
   49               | expression . INCASS expression
   50               | expression . MULASS expression
   51               | expression . '/' '=' expression
   62 expression: expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   67           | expression . EQ expression
   68           | expression . NEQ expression
   69           | expression . AND expression
   70           | expression . OR expression
   71           | expression . GT expression
   72           | expression . GE expression
   73           | expression . LT expression
   74           | expression . LE expression
   90 expressionList: expression .
   91               | expression . ',' expressionList

    AND     shift, and go to state 75
    OR      shift, and go to state 76
    EQ      shift, and go to state 77
    NEQ     shift, and go to state 78
    GT      shift, and go to state 79
    GE      shift, and go to state 80
    LT      shift, and go to state 81
    LE      shift, and go to state 82
    DECR    shift, and go to state 135
    INCR    shift, and go to state 136
    DECASS  shift, and go to state 137
    INCASS  shift, and go to state 138
    MULASS  shift, and go to state 139
    '+'     shift, and go to state 83
    '-'     shift, and go to state 84
    '*'     shift, and go to state 85
    '/'     shift, and go to state 140
    '%'     shift, and go to state 87
    ','     shift, and go to state 88

    '='       reduce using rule 90 (expressionList)
    $default  reduce using rule 42 (simpleStatment)


State 107

   45 simpleStatment: expressionList . '=' expressionList

    '='  shift, and go to state 141


State 108

    3 type: '(' type . ')'
   17 functionParametersList: type .
   19                       | type . ',' functionParametersList

    ')'  shift, and go to state 70
    ','  shift, and go to state 91

    ')'  [reduce using rule 17 (functionParametersList)]


State 109

   84 operand: '(' expression ')' .

    $default  reduce using rule 84 (operand)


State 110

   62 expression: expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   67           | expression . EQ expression
   68           | expression . NEQ expression
   69           | expression . AND expression
   69           | expression AND expression .
   70           | expression . OR expression
   71           | expression . GT expression
   72           | expression . GE expression
   73           | expression . LT expression
   74           | expression . LE expression

    EQ   shift, and go to state 77
    NEQ  shift, and go to state 78
    GT   shift, and go to state 79
    GE   shift, and go to state 80
    LT   shift, and go to state 81
    LE   shift, and go to state 82
    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87

    $default  reduce using rule 69 (expression)


State 111

   62 expression: expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   67           | expression . EQ expression
   68           | expression . NEQ expression
   69           | expression . AND expression
   70           | expression . OR expression
   70           | expression OR expression .
   71           | expression . GT expression
   72           | expression . GE expression
   73           | expression . LT expression
   74           | expression . LE expression

    AND  shift, and go to state 75
    EQ   shift, and go to state 77
    NEQ  shift, and go to state 78
    GT   shift, and go to state 79
    GE   shift, and go to state 80
    LT   shift, and go to state 81
    LE   shift, and go to state 82
    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87

    $default  reduce using rule 70 (expression)


State 112

   62 expression: expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   67           | expression . EQ expression
   67           | expression EQ expression .
   68           | expression . NEQ expression
   69           | expression . AND expression
   70           | expression . OR expression
   71           | expression . GT expression
   72           | expression . GE expression
   73           | expression . LT expression
   74           | expression . LE expression

    GT   shift, and go to state 79
    GE   shift, and go to state 80
    LT   shift, and go to state 81
    LE   shift, and go to state 82
    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87

    $default  reduce using rule 67 (expression)


State 113

   62 expression: expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   67           | expression . EQ expression
   68           | expression . NEQ expression
   68           | expression NEQ expression .
   69           | expression . AND expression
   70           | expression . OR expression
   71           | expression . GT expression
   72           | expression . GE expression
   73           | expression . LT expression
   74           | expression . LE expression

    GT   shift, and go to state 79
    GE   shift, and go to state 80
    LT   shift, and go to state 81
    LE   shift, and go to state 82
    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87

    $default  reduce using rule 68 (expression)


State 114

   62 expression: expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   67           | expression . EQ expression
   68           | expression . NEQ expression
   69           | expression . AND expression
   70           | expression . OR expression
   71           | expression . GT expression
   71           | expression GT expression .
   72           | expression . GE expression
   73           | expression . LT expression
   74           | expression . LE expression

    LT   shift, and go to state 81
    LE   shift, and go to state 82
    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87

    $default  reduce using rule 71 (expression)


State 115

   62 expression: expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   67           | expression . EQ expression
   68           | expression . NEQ expression
   69           | expression . AND expression
   70           | expression . OR expression
   71           | expression . GT expression
   72           | expression . GE expression
   72           | expression GE expression .
   73           | expression . LT expression
   74           | expression . LE expression

    LT   shift, and go to state 81
    LE   shift, and go to state 82
    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87

    $default  reduce using rule 72 (expression)


State 116

   62 expression: expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   67           | expression . EQ expression
   68           | expression . NEQ expression
   69           | expression . AND expression
   70           | expression . OR expression
   71           | expression . GT expression
   72           | expression . GE expression
   73           | expression . LT expression
   73           | expression LT expression .
   74           | expression . LE expression

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87

    $default  reduce using rule 73 (expression)


State 117

   62 expression: expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   67           | expression . EQ expression
   68           | expression . NEQ expression
   69           | expression . AND expression
   70           | expression . OR expression
   71           | expression . GT expression
   72           | expression . GE expression
   73           | expression . LT expression
   74           | expression . LE expression
   74           | expression LE expression .

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87

    $default  reduce using rule 74 (expression)


State 118

   62 expression: expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   65           | expression . '+' expression
   65           | expression '+' expression .
   66           | expression . '-' expression
   67           | expression . EQ expression
   68           | expression . NEQ expression
   69           | expression . AND expression
   70           | expression . OR expression
   71           | expression . GT expression
   72           | expression . GE expression
   73           | expression . LT expression
   74           | expression . LE expression

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87

    $default  reduce using rule 65 (expression)


State 119

   62 expression: expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   66           | expression '-' expression .
   67           | expression . EQ expression
   68           | expression . NEQ expression
   69           | expression . AND expression
   70           | expression . OR expression
   71           | expression . GT expression
   72           | expression . GE expression
   73           | expression . LT expression
   74           | expression . LE expression

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87

    $default  reduce using rule 66 (expression)


State 120

   62 expression: expression . '*' expression
   62           | expression '*' expression .
   63           | expression . '/' expression
   64           | expression . '%' expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   67           | expression . EQ expression
   68           | expression . NEQ expression
   69           | expression . AND expression
   70           | expression . OR expression
   71           | expression . GT expression
   72           | expression . GE expression
   73           | expression . LT expression
   74           | expression . LE expression

    $default  reduce using rule 62 (expression)


State 121

   62 expression: expression . '*' expression
   63           | expression . '/' expression
   63           | expression '/' expression .
   64           | expression . '%' expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   67           | expression . EQ expression
   68           | expression . NEQ expression
   69           | expression . AND expression
   70           | expression . OR expression
   71           | expression . GT expression
   72           | expression . GE expression
   73           | expression . LT expression
   74           | expression . LE expression

    $default  reduce using rule 63 (expression)


State 122

   62 expression: expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   64           | expression '%' expression .
   65           | expression . '+' expression
   66           | expression . '-' expression
   67           | expression . EQ expression
   68           | expression . NEQ expression
   69           | expression . AND expression
   70           | expression . OR expression
   71           | expression . GT expression
   72           | expression . GE expression
   73           | expression . LT expression
   74           | expression . LE expression

    $default  reduce using rule 64 (expression)


State 123

   91 expressionList: expression ',' expressionList .

    $default  reduce using rule 91 (expressionList)


State 124

   80 primaryExpr: primaryExpr '(' ')' .

    $default  reduce using rule 80 (primaryExpr)


State 125

   81 primaryExpr: primaryExpr '(' expressionList . ')'

    ')'  shift, and go to state 142


State 126

   19 functionParametersList: type ',' functionParametersList .

    $default  reduce using rule 19 (functionParametersList)


State 127

   20 functionParametersList: identifierList type ',' . functionParametersList

    INT         shift, and go to state 22
    FLOAT32     shift, and go to state 23
    BOOL        shift, and go to state 24
    RUNE        shift, and go to state 25
    FUNC        shift, and go to state 26
    IDENTIFIER  shift, and go to state 58
    '('         shift, and go to state 28

    type                    go to state 60
    literalType             go to state 31
    functionParametersList  go to state 143
    identifierList          go to state 62


State 128

   54 ifStatment: IF expression . block
   55           | IF expression . block ELSE ifStatment
   56           | IF expression . block ELSE block
   62 expression: expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   67           | expression . EQ expression
   68           | expression . NEQ expression
   69           | expression . AND expression
   70           | expression . OR expression
   71           | expression . GT expression
   72           | expression . GE expression
   73           | expression . LT expression
   74           | expression . LE expression

    AND  shift, and go to state 75
    OR   shift, and go to state 76
    EQ   shift, and go to state 77
    NEQ  shift, and go to state 78
    GT   shift, and go to state 79
    GE   shift, and go to state 80
    LT   shift, and go to state 81
    LE   shift, and go to state 82
    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87
    '{'  shift, and go to state 63

    block  go to state 144


State 129

   60 forStatment: FOR block .

    $default  reduce using rule 60 (forStatment)


State 130

   58 forStatment: FOR simpleStatment . ';' expression ';' simpleStatment block

    ';'  shift, and go to state 145


State 131

   42 simpleStatment: expression .
   46 incdecStatment: expression . DECR
   47               | expression . INCR
   48 oprAssStatment: expression . DECASS expression
   49               | expression . INCASS expression
   50               | expression . MULASS expression
   51               | expression . '/' '=' expression
   59 forStatment: FOR expression . block
   62 expression: expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   67           | expression . EQ expression
   68           | expression . NEQ expression
   69           | expression . AND expression
   70           | expression . OR expression
   71           | expression . GT expression
   72           | expression . GE expression
   73           | expression . LT expression
   74           | expression . LE expression
   90 expressionList: expression .
   91               | expression . ',' expressionList

    AND     shift, and go to state 75
    OR      shift, and go to state 76
    EQ      shift, and go to state 77
    NEQ     shift, and go to state 78
    GT      shift, and go to state 79
    GE      shift, and go to state 80
    LT      shift, and go to state 81
    LE      shift, and go to state 82
    DECR    shift, and go to state 135
    INCR    shift, and go to state 136
    DECASS  shift, and go to state 137
    INCASS  shift, and go to state 138
    MULASS  shift, and go to state 139
    '+'     shift, and go to state 83
    '-'     shift, and go to state 84
    '*'     shift, and go to state 85
    '/'     shift, and go to state 140
    '%'     shift, and go to state 87
    ','     shift, and go to state 88
    '{'     shift, and go to state 63

    '='       reduce using rule 90 (expressionList)
    $default  reduce using rule 42 (simpleStatment)

    block  go to state 146


State 132

   57 returnStatment: RETURN expressionList .

    $default  reduce using rule 57 (returnStatment)


State 133

   53 statmentList: statments ';' . statmentList

    IF               shift, and go to state 94
    FOR              shift, and go to state 95
    RETURN           shift, and go to state 96
    VAR              shift, and go to state 2
    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    '}'       reduce using rule 52 (statmentList)
    $default  reduce using rule 41 (simpleStatment)

    listDeclaration      go to state 97
    variableDeclaration  go to state 10
    statments            go to state 98
    simpleStatment       go to state 99
    incdecStatment       go to state 100
    oprAssStatment       go to state 101
    statmentList         go to state 147
    ifStatment           go to state 103
    returnStatment       go to state 104
    forStatment          go to state 105
    expression           go to state 106
    unaryExpr            go to state 51
    primaryExpr          go to state 52
    operand              go to state 53
    literal              go to state 54
    basicLiteral         go to state 55
    expressionList       go to state 107


State 134

   21 block: '{' statmentList '}' .

    $default  reduce using rule 21 (block)


State 135

   46 incdecStatment: expression DECR .

    $default  reduce using rule 46 (incdecStatment)


State 136

   47 incdecStatment: expression INCR .

    $default  reduce using rule 47 (incdecStatment)


State 137

   48 oprAssStatment: expression DECASS . expression

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    expression    go to state 148
    unaryExpr     go to state 51
    primaryExpr   go to state 52
    operand       go to state 53
    literal       go to state 54
    basicLiteral  go to state 55


State 138

   49 oprAssStatment: expression INCASS . expression

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    expression    go to state 149
    unaryExpr     go to state 51
    primaryExpr   go to state 52
    operand       go to state 53
    literal       go to state 54
    basicLiteral  go to state 55


State 139

   50 oprAssStatment: expression MULASS . expression

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    expression    go to state 150
    unaryExpr     go to state 51
    primaryExpr   go to state 52
    operand       go to state 53
    literal       go to state 54
    basicLiteral  go to state 55


State 140

   51 oprAssStatment: expression '/' . '=' expression
   63 expression: expression '/' . expression

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49
    '='              shift, and go to state 151

    expression    go to state 121
    unaryExpr     go to state 51
    primaryExpr   go to state 52
    operand       go to state 53
    literal       go to state 54
    basicLiteral  go to state 55


State 141

   45 simpleStatment: expressionList '=' . expressionList

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    expression      go to state 50
    unaryExpr       go to state 51
    primaryExpr     go to state 52
    operand         go to state 53
    literal         go to state 54
    basicLiteral    go to state 55
    expressionList  go to state 152


State 142

   81 primaryExpr: primaryExpr '(' expressionList ')' .

    $default  reduce using rule 81 (primaryExpr)


State 143

   20 functionParametersList: identifierList type ',' functionParametersList .

    $default  reduce using rule 20 (functionParametersList)


State 144

   54 ifStatment: IF expression block .
   55           | IF expression block . ELSE ifStatment
   56           | IF expression block . ELSE block

    ELSE  shift, and go to state 153

    $default  reduce using rule 54 (ifStatment)


State 145

   58 forStatment: FOR simpleStatment ';' . expression ';' simpleStatment block

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    expression    go to state 154
    unaryExpr     go to state 51
    primaryExpr   go to state 52
    operand       go to state 53
    literal       go to state 54
    basicLiteral  go to state 55


State 146

   59 forStatment: FOR expression block .

    $default  reduce using rule 59 (forStatment)


State 147

   53 statmentList: statments ';' statmentList .

    $default  reduce using rule 53 (statmentList)


State 148

   48 oprAssStatment: expression DECASS expression .
   62 expression: expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   67           | expression . EQ expression
   68           | expression . NEQ expression
   69           | expression . AND expression
   70           | expression . OR expression
   71           | expression . GT expression
   72           | expression . GE expression
   73           | expression . LT expression
   74           | expression . LE expression

    AND  shift, and go to state 75
    OR   shift, and go to state 76
    EQ   shift, and go to state 77
    NEQ  shift, and go to state 78
    GT   shift, and go to state 79
    GE   shift, and go to state 80
    LT   shift, and go to state 81
    LE   shift, and go to state 82
    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87

    $default  reduce using rule 48 (oprAssStatment)


State 149

   49 oprAssStatment: expression INCASS expression .
   62 expression: expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   67           | expression . EQ expression
   68           | expression . NEQ expression
   69           | expression . AND expression
   70           | expression . OR expression
   71           | expression . GT expression
   72           | expression . GE expression
   73           | expression . LT expression
   74           | expression . LE expression

    AND  shift, and go to state 75
    OR   shift, and go to state 76
    EQ   shift, and go to state 77
    NEQ  shift, and go to state 78
    GT   shift, and go to state 79
    GE   shift, and go to state 80
    LT   shift, and go to state 81
    LE   shift, and go to state 82
    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87

    $default  reduce using rule 49 (oprAssStatment)


State 150

   50 oprAssStatment: expression MULASS expression .
   62 expression: expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   67           | expression . EQ expression
   68           | expression . NEQ expression
   69           | expression . AND expression
   70           | expression . OR expression
   71           | expression . GT expression
   72           | expression . GE expression
   73           | expression . LT expression
   74           | expression . LE expression

    AND  shift, and go to state 75
    OR   shift, and go to state 76
    EQ   shift, and go to state 77
    NEQ  shift, and go to state 78
    GT   shift, and go to state 79
    GE   shift, and go to state 80
    LT   shift, and go to state 81
    LE   shift, and go to state 82
    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87

    $default  reduce using rule 50 (oprAssStatment)


State 151

   51 oprAssStatment: expression '/' '=' . expression

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    expression    go to state 155
    unaryExpr     go to state 51
    primaryExpr   go to state 52
    operand       go to state 53
    literal       go to state 54
    basicLiteral  go to state 55


State 152

   45 simpleStatment: expressionList '=' expressionList .

    $default  reduce using rule 45 (simpleStatment)


State 153

   55 ifStatment: IF expression block ELSE . ifStatment
   56           | IF expression block ELSE . block

    IF   shift, and go to state 94
    '{'  shift, and go to state 63

    block       go to state 156
    ifStatment  go to state 157


State 154

   58 forStatment: FOR simpleStatment ';' expression . ';' simpleStatment block
   62 expression: expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   67           | expression . EQ expression
   68           | expression . NEQ expression
   69           | expression . AND expression
   70           | expression . OR expression
   71           | expression . GT expression
   72           | expression . GE expression
   73           | expression . LT expression
   74           | expression . LE expression

    AND  shift, and go to state 75
    OR   shift, and go to state 76
    EQ   shift, and go to state 77
    NEQ  shift, and go to state 78
    GT   shift, and go to state 79
    GE   shift, and go to state 80
    LT   shift, and go to state 81
    LE   shift, and go to state 82
    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87
    ';'  shift, and go to state 158


State 155

   51 oprAssStatment: expression '/' '=' expression .
   62 expression: expression . '*' expression
   63           | expression . '/' expression
   64           | expression . '%' expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   67           | expression . EQ expression
   68           | expression . NEQ expression
   69           | expression . AND expression
   70           | expression . OR expression
   71           | expression . GT expression
   72           | expression . GE expression
   73           | expression . LT expression
   74           | expression . LE expression

    AND  shift, and go to state 75
    OR   shift, and go to state 76
    EQ   shift, and go to state 77
    NEQ  shift, and go to state 78
    GT   shift, and go to state 79
    GE   shift, and go to state 80
    LT   shift, and go to state 81
    LE   shift, and go to state 82
    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87

    $default  reduce using rule 51 (oprAssStatment)


State 156

   56 ifStatment: IF expression block ELSE block .

    $default  reduce using rule 56 (ifStatment)


State 157

   55 ifStatment: IF expression block ELSE ifStatment .

    $default  reduce using rule 55 (ifStatment)


State 158

   58 forStatment: FOR simpleStatment ';' expression ';' . simpleStatment block

    NOT              shift, and go to state 41
    IDENTIFIER       shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    FLOAT_LITERAL    shift, and go to state 44
    BOOLEAN_LITERAL  shift, and go to state 45
    CHAR_LITERAL     shift, and go to state 46
    '+'              shift, and go to state 47
    '-'              shift, and go to state 48
    '('              shift, and go to state 49

    $default  reduce using rule 41 (simpleStatment)

    simpleStatment  go to state 159
    incdecStatment  go to state 100
    oprAssStatment  go to state 101
    expression      go to state 106
    unaryExpr       go to state 51
    primaryExpr     go to state 52
    operand         go to state 53
    literal         go to state 54
    basicLiteral    go to state 55
    expressionList  go to state 107


State 159

   58 forStatment: FOR simpleStatment ';' expression ';' simpleStatment . block

    '{'  shift, and go to state 63

    block  go to state 160


State 160

   58 forStatment: FOR simpleStatment ';' expression ';' simpleStatment block .

    $default  reduce using rule 58 (forStatment)
