Nonterminals useless in grammar

    forStatment
    ifStatment
    returnStatment
    declarationStatment
    expressionStatment
    assignmentStatment
    identifierExpression
    boolExpression
    intergerExpression
    floatExpression
    charExpression
    block
    intType
    booleanType
    floatType
    charType
    functionDeclaration
    variableDeclaration


Terminals unused in grammar

    INT
    FLOAT32
    BOOL
    CHAR
    RUNE
    BYTE
    SEMI
    IF
    ELSE
    FOR
    RETURN
    VAR
    FUNC
    IDENTIFIER
    INTEGER_LITERAL
    FLOAT_LITERAL
    BOOLEAN_LITERAL
    CHAR_LITERAL


Grammar

    0 $accept: start $end

    1 start: %empty


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INT (258)
    FLOAT32 (259)
    BOOL (260)
    CHAR (261)
    RUNE (262)
    BYTE (263)
    SEMI (264)
    IF (265)
    ELSE (266)
    FOR (267)
    RETURN (268)
    VAR (269)
    FUNC (270)
    IDENTIFIER <identifierValue> (271)
    INTEGER_LITERAL <integerValue> (272)
    FLOAT_LITERAL <floatValue> (273)
    BOOLEAN_LITERAL <booleanValue> (274)
    CHAR_LITERAL <charValue> (275)


Nonterminals, with rules where they appear

    $accept (21)
        on left: 0
    start (22)
        on left: 1
        on right: 0


State 0

    0 $accept: . start $end

    $default  reduce using rule 1 (start)

    start  go to state 1


State 1

    0 $accept: start . $end

    $end  shift, and go to state 2


State 2

    0 $accept: start $end .

    $default  accept
